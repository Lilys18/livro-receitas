#include <stdio.h>
#include <stdlib.h>

typedef struct no{
    int info;
    struct no *esq, *dir;
}no;

no *raiz;

no* inicializarArv(){
    return NULL;
}

no* criaNo(int valor){
    no* aux = (no*)malloc(sizeof(no));
    if(aux!=NULL){
        aux->info = valor;
        aux->esq = NULL;
        aux->dir = NULL;
    }
    return aux;
}

no* inserir(int valor){
    no* aux = criaNo(valor);
    if(aux==NULL){   //lista vazia
        raiz = aux;
    }    
    else{
        no* aux2 = raiz; //variavel para percorrer a arvore
        while(aux2->esq!=NULL && aux2->dir!=NULL){
            aux2 = aux2->esq;
        }
        if(aux2->esq==NULL)
            aux2->esq = aux;
        else
            aux2->dir = aux;
    }
}

void percorrePreOrdem(no *raiz){
    no* aux = (no*)malloc(sizeof(no));
    if(aux!=NULL){
        printf("%d", raiz->info);
        percorrePreOrdem(raiz->esq);
        percorrePreOrdem(raiz->dir);
    }
    else
        printf("Lista vazia!");
}

void percorreEmOrdem(no *raiz){
    no* aux = (no*)malloc(sizeof(no));
    if(aux!=NULL){
        percorreEmOrdem(raiz->esq);
        printf("%d", raiz->info);
        percorreEmOrdem(raiz->dir);
    }
    else
        printf("Lista vazia!");
}

void percorrePosOrdem(no *raiz){
    no* aux = (no*)malloc(sizeof(no));
    if(aux!=NULL){
        percorrePosOrdem(raiz->esq);
        percorrePosOrdem(raiz->dir);
        printf("%d", raiz->info);
    }
    else
        printf("Lista vazia!");
}

int main(){
    int opcao1, opcao2, valor;
    inicializarArv();
    no *raiz;
    printf("Árvore Binária");
    printf("Digite sua escolha:\n1-Inserir valor;\n");
    printf("2-Buscar valor;\n3-Exibir valores.\n-> ");
    scanf("%d", &opcao1);
    switch (opcao1){
        case 1:
            printf("Insira valor: ");
            scanf("%d", &valor);
            inserir(valor);
        break;

        case 2:
            
            
            
        break;
        
        case 3:
            printf("Insira de que modo deseja percorrer a árvore: ");
            printf("1-Pre Ordem;\n2-Em Ordem;\n3-Pós Ordem\n-> ");
            scanf("%d", &opcao2);
            switch (opcao2){
                case 1:
                    percorrePreOrdem(raiz);
                case 2:
                    percorreEmOrdem(raiz);
                case 3:
                    percorrePosOrdem(raiz);
            }
        break;

        default:
            printf("Opção inválida!");
    }
    return 0;
}
